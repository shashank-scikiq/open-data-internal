

// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();
@import './styles/main.scss';

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$open-data-primary: mat.define-palette(mat.$indigo-palette);
$open-data-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$open-data-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$open-data-theme: mat.define-light-theme((
  color: (
    primary: $open-data-primary,
    accent: $open-data-accent,
    warn: $open-data-warn,
  ),
  typography: mat.define-typography-config(),
  density: 0
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($open-data-theme);

/* You can add global styles to this file, and also import other style files */

// html, body { height: 100%; }
body { margin: 0; 
  // font-family: Roboto, "Helvetica Neue", sans-serif; 
  font-family: "IBM Plex Sans", sans-serif !important;
}




/*********************
VARIABLES
*********************/
// Colors
$black: rgb(0, 0, 0);
$white: rgb(255, 255, 255);
$dark-grey: #232323;
$white-background: rgb(250, 250, 250);
$light-grey: #929292;
$uni: rgb(241, 90, 36);
$error: rgb(255, 0, 0);
$success: rgb(0, 128, 0);
$dark-icon: #707070;
$light-icon: #e6e6e6; // Typography
$font-xxs: 0.75rem; //12px
$font-xs: 0.875rem; //14px
$font-small: 1rem; //16px
$font-medium: 1.25rem; //20px
$font-lg: 1.5rem; //24px
$font-xl: 1.75rem; //28px
$font-heading: 2rem;
//32px
$font-light: 300;
$font-regular: 400;
$font-med: 500;
$font-bold: 500;
$font-bolder: 900; // Media step breakpoint mixin based on Angular Material lib
$breakpoints: (
  xs   : 'screen and (max-width: 599px)',
  sm   : 'screen and (min-width: 600px) and (max-width: 959px)',
  md   : 'screen and (min-width: 960px) and (max-width: 1279px)',
  lg   : 'screen and (min-width: 1280px) and (max-width: 1919px)',
  xl   : 'screen and (min-width: 1920px) and (max-width: 5000px)',
  lt-sm: 'screen and (max-width: 599px)',
  lt-md: 'screen and (max-width: 959px)',
  lt-lg: 'screen and (max-width: 1279px)',
  lt-xl: 'screen and (max-width: 1919px)',
  gt-xs: 'screen and (min-width: 600px)',
  gt-sm: 'screen and (min-width: 960px)',
  gt-md: 'screen and (min-width: 1280px)',
  gt-lg: 'screen and (min-width: 1920px)'
)
!default;


/*********************
BREAKPOINTS
*********************/

@mixin media-breakpoint($breakpointName) {

  $mediaQuery: map-get($breakpoints, $breakpointName);

  @if ($mediaQuery == null) {
      @content
  } @else {
      @media #{$mediaQuery} {
          @content
      }
  }
};

